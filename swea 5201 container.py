# 화물 N , 트럭 M, 화물 무게 w , 트럭 적재 용량 t
# 화물 총 중량은 최대가 된다.
# 옮길 수 없었던 경우는 0을 출력한다.
# N개의 컨테이너를 M개의 트럭으로 운반하는데, 트럭 하나당 1개의 컨테이너만 운반가능하다
# 또한 컨테이너가 트럭의 적재용량을 초과해선 안된다.
# 0-1knapsack 문제 쪼갤 수도 없고, 하나의 트럭에는 한 개의 컨테이너가 담긴다
# 모든 부분집합을 구한다. 부분집합 총무게가 트럭 적재량을 초과하면 불가능 결과를 반환한다
# 화물의 총 중량이 최대가 된 경우에서, 옮겨진 화물의 무게의 합은 얼마인가?
# 아무 것도 움직일 수 없었을 때에만 0을 출력합니다.
T = int(input())
for tc in range(1, T + 1):
    N, M = map(int, input().split())  # 컨테이너 수, 트럭 수
    w = list(map(int, input().split()))  # 컨테이너 각각의 무게
    t = list(map(int, input().split()))  # 트럭 각각의 적재용량

    # 각 트레일러/트럭은 내림차순 정렬해야 적재 알고리즘 할 수 있음
    w.sort(reverse=True)
    t.sort(reverse=True)
    ans = 0 #정답 세는 변수
    n = 0
    for i in w: #컨테이너 안에서 도는 i
        if i <= t[n]: #i가 n번째 컨테이너에 들어갈 수 있으면,
            ans += i #운반하고 ans에 해당 화물 무게를 반영
            n += 1 #다음 컨테이너와 비교함
            if n == len(t): #모든 컨테이너가 소모되면, 더 이상 운반 불가함
                break

    print(f'#{tc} {ans}')
#화물이 남는 경우엔 어떻게? 하? 지?